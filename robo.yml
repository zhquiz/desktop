desktop:
  command: |
    robo -c "{{ .robo.file }}" build
    ./{{ .exe }}
serve:
  command: |
    robo -c "{{ .robo.file }}" build
    ZHQUIZ_BROWSER=0 ./{{ .exe }}
dev:
  command: |
    export PORT=${SERVER_PORT:-5000}
    # increase the file watch limit, might be required on MacOS
    ulimit -n 1000
    reflex -s -r '\.go$' -- robo -c "{{ .robo.file }}" serve
build:
  command: |
    export GOOS=${GOOS:-$(go env GOOS)}
    export GOARCH=${GOARCH:-$(go env GOARCH)}

    if [ $GOOS = "windows" ]; then
      export exe="zhquiz-$GOOS-$GOARCH.exe"
    elif [ $GOOS = "darwin" ]; then
      export exe="zhquiz-$GOOS-$GOARCH.app"
    else
      export exe="zhquiz-$GOOS-$GOARCH"
    fi

    export CGO_CFLAGS="-DSQLITE_MAX_VARIABLE_NUMBER=10000"
    export CGO_ENABLED=1

    if [ $(go env GOOS) = "windows" ]; then
      go build -ldflags="-H windowsgui" -o "$exe"
    else
      go build -o "$exe"
    fi
build-windows:
  command: |
    for arch in amd64 386
      do
        export GOOS="windows"
        export GOARCH="$arch"
        robo -c "{{ .robo.file }}" build
      done
build-others:
  command: |
    for arch in amd64 386
      do
        export GOOS="linux"
        export GOARCH="$arch"
        robo -c "{{ .robo.file }}" build
      done

    export GOOS="darwin"
    export GOARCH="amd64"
    robo -c "{{ .robo.file }}" build
build-all:
  command: |
    robo -c "{{ .robo.file }}" build-windows
    robo -c "{{ .robo.file }}" build-others

##########
# Settings

variables:
  repo: github.com/zhquiz/go-zhquiz
  branch: $(git branch --show-current)
