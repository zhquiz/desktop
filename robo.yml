desktop:
  command: |
    robo -c "{{ .robo.file }}" build
    ./{{ .exe }}
serve:
  command: |
    robo -c "{{ .robo.file }}" build
    DEBUG=1 ./{{ .exe }}
dev:
  command: |
    cd __packages__/ui
    yarn dev
serve-dev:
  command: |
    export PORT=${SERVER_PORT:-5000}
    # increase the file watch limit, might be required on MacOS
    ulimit -n 1000
    reflex -s -r '\.go$' -- robo -c "{{ .robo.file }}" serve
build:
  command: |
    go build --tags "{{ .buildTags }}" -o {{ .exe }}
build-windows:
  command: |
    xgo \
      -ldflags="-H windowsgui" \
      -branch={{ .branch }} \
      -targets=windows/amd64 \
      -out=zhquiz -tags="{{ .buildTags }}" \
      {{ .repo }}
build-mac:
  summary: |
    See https://github.com/getlantern/systray#macos for packaging and high res
  command: |
    xgo \
      -branch={{ .branch }} \
      -targets=darwin/amd64 \
      -out=zhquiz -tags="{{ .buildTags }}" \
      {{ .repo }}
build-linux:
  command: |
    go build --tags "{{ .buildTags }}" -o "zhquiz-linux-amd64"
build-all:
  command: |
    robo -c "{{ .robo.file }}" build-windows
    robo -c "{{ .robo.file }}" build-mac
    robo -c "{{ .robo.file }}" build-linux
dist:
  command: |
    cd __packages__/ui
    yarn build
    cd -

    robo -c "{{ .robo.file }}" build-all

    cd __packages__/nodejs
    yarn ts-node scripts/dist.ts
    cd -

##########
# Settings

variables:
  repo: github.com/zhquiz/go-zhquiz
  branch: $(git branch --show-current)
  exe: '"$([ $(go env GOOS) = "windows" ] && echo "zhquiz.exe" || echo "zhquiz.app")"'
  buildTags: sqlite_json1
