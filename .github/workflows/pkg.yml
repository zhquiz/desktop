name: pkg

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2

      ############ Set Up ############

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15

      - name: install webkit2gtk (Ubuntu)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y webkit2gtk-4.0

      ############ Build ############

      - name: Build (non-Windows)
        if: matrix.platform != 'windows-latest'
        run: |
          cd __packages__/desktop
          go build --tags "sqlite_fts5 sqlite_json1" -o ../../zhquiz

      - name: Build (Windows)
        if: matrix.platform == 'windows-latest'
        run: |
          cd __packages__\\desktop
          go build --tags "sqlite_fts5 sqlite_json1 no_fallback" -ldflags="-H windowsgui" -o ..\\..\\zhquiz-no_fallback.exe
          go build --tags "sqlite_fts5 sqlite_json1" -ldflags="-H windowsgui" -o ..\\..\\zhquiz.exe

      ############ Packaging (Linux) ############

      - name: Packaging (Linux)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          mkdir dist
          cp zhquiz LICENSE README.md dist/
          cp -r __packages__/desktop/assets dist/
          cp -r __packages__/desktop/public dist/
          cd dist
          tar -czf ../zhquiz-linux.tar.gz *
      - name: Upload binaries to release (Linux)
        if: matrix.platform == 'ubuntu-latest'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: zhquiz-linux.tar.gz
          tag: release-${{ github.ref }}
          overwrite: true
          body: Executable for Linux

      ############ Packaging (macOS) ############

      - name: Packaging (macOS)
        if: matrix.platform == 'macos-latest'
        run: |
          mkdir -p dist/zhquiz.app/Contents/MacOS
          cp __packages__/desktop/Info.plist dist/zhquiz.app/Contents/
          cp zhquiz LICENSE README.md dist/zhquiz.app/Contents/MacOS/
          cp -r __packages__/desktop/assets dist/zhquiz.app/Contents/MacOS/
          cp -r __packages__/desktop/public dist/zhquiz.app/Contents/MacOS/
          cd dist
          zip -r ../zhquiz-macos.zip zhquiz.app
      - name: Upload binaries to release (macOS)
        if: matrix.platform == 'macos-latest'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: zhquiz-macos.zip
          tag: release-${{ github.ref }}
          overwrite: true
          body: Executable for macOS

      ############ Packaging (Windows) ############

      - name: Packaging (Windows)
        if: matrix.platform == 'windows-latest'
        run: |
          mkdir dist-no_fallback

          cp zhquiz-no_fallback.exe dist-no_fallback\\zhquiz.exe
          cp LICENSE dist-no_fallback\\LICENSE
          cp README.md dist-no_fallback\\README.md

          cp -r __packages__\\desktop\\assets dist-no_fallback\\assets
          cp -r __packages__\\desktop\\public dist-no_fallback\\public

          cd dist-no_fallback
          tar -cf ..\\zhquiz-windows-no_fallback.tar *
          cd -

          mkdir dist

          curl https://raw.githubusercontent.com/webview/webview/master/dll/x64/WebView2Loader.dll --output dist\\WebView2Loader.dll
          curl https://raw.githubusercontent.com/webview/webview/master/dll/x64/webview.dll --output dist\\webview.dll
          
          cp zhquiz.exe dist\\zhquiz.exe
          cp LICENSE dist\\LICENSE
          cp README.md dist\\README.md

          cp -r __packages__\\desktop\\assets dist\\assets
          cp -r __packages__\\desktop\\public dist\\public

          cd dist
          tar -cf ..\\zhquiz-windows.tar *
      - name: Upload binaries to release (Windows no_fallback)
        if: matrix.platform == 'windows-latest'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: zhquiz-windows-no_fallback.tar
          tag: release-${{ github.ref }}
          overwrite: true
          body: Executable for Windows
      - name: Upload binaries to release (Windows default)
        if: matrix.platform == 'windows-latest'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: zhquiz-windows.tar
          tag: release-${{ github.ref }}
          overwrite: true
          body: Executable for Windows
